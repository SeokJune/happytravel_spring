<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happytravel.erp.sales.dao.PackageDao">
    <!--  ////////////////////////////////////// SQL 모듈 블록 ///////////////////////////////////////////////////-->
    <!-- 영업부서 아니면 영업쪽 READ 불가능하게만들기-->
    <sql id="readCondition">
        EXISTS (
        SELECT 1
        FROM happytravel.TB_EMPLOYMENT_INFO
        WHERE (DEPT_CODE = 3000 OR 9000)
        AND STATUS_CODE = 1000
        AND EMP_ID = #{empId}
        )
    </sql>

    <!-- 사원 권한정보 확인 쿼리 모듈화, 영업쪽에서 CREATE,UPDATE,DELETE는 대리부터 가능 -->
    <sql id="CRUDCondition">
        EXISTS (
        SELECT 1
        FROM happytravel.TB_EMPLOYMENT_INFO
        WHERE DEPT_CODE = 3000
        AND STATUS_CODE = 1000
        AND POS_CODE NOT IN (1000, 1100)
        AND EMP_ID = #{empId}
        )
    </sql>
    <!--영업부서 부장이상 권한 확인하여 결제상채변경 쿼리 모듈-->
    <sql id="managerCondition">
        EXISTS (
        SELECT 1
        FROM happytravel.TB_EMPLOYMENT_INFO
        WHERE DEPT_CODE = 3000
        AND STATUS_CODE = 1000
        <!--이하 부장 아래들-->
        AND POS_CODE NOT IN (1000, 1100, 1200, 1300, 1400)
        AND EMP_ID = #{empId}
        )
    </sql>
    <!-- 총 가격 계산 SQL 블록 -->
    <sql id="calculateTotalPrice">
        (
        (SELECT price FROM TB_HOTEL_INFO WHERE HOTEL_CODE = #{hotelCode}) * DATEDIFF(#{endDate}, #{startDate}) +
        (SELECT price FROM TB_AGENCY_INFO WHERE AGENCY_CODE = #{agencyCode}) * DATEDIFF(#{endDate}, #{startDate}) +
        (SELECT price FROM TB_FLIGHT_INFO WHERE FLIGHT_CODE = #{flightCode})
        )
    </sql>

    <!-- EXISTS 조건 SQL 블록 -->
    <sql id="existsCondition">
        EXISTS (
        SELECT 1
        FROM TB_AGENCY_INFO
        WHERE AGENCY_CODE = #{agencyCode}
        )
        AND EXISTS (
        SELECT 1
        FROM TB_FLIGHT_INFO
        WHERE FLIGHT_CODE = #{flightCode}
        )
        AND EXISTS (
        SELECT 1
        FROM TB_HOTEL_INFO
        WHERE HOTEL_CODE = #{hotelCode}
        )
    </sql>
    <!--패키지 레코드를 참조하는 각 레코드들의 국가코드가 같은지 확인하는 코드블록-->
    <sql id="checkCountryCodes">
        SELECT SUM(cnt) AS totalCount FROM (
        SELECT COUNT(1) AS cnt
        FROM TB_HOTEL_INFO
        WHERE HOTEL_CODE = #{hotelCode}
        AND COUNTRY_CODE = #{countryCode}
        UNION ALL
        SELECT COUNT(1) AS cnt
        FROM TB_FLIGHT_INFO
        WHERE FLIGHT_CODE = #{flightCode}
        AND COUNTRY_CODE = #{countryCode}
        UNION ALL
        SELECT COUNT(1) AS cnt
        FROM TB_AGENCY_INFO
        WHERE AGENCY_CODE = #{agencyCode}
        AND COUNTRY_CODE = #{countryCode}
        ) AS subquery
    </sql>

    <!-- 전체 패키지 목록 조회 -->
    <select id="getPackageList" resultType="kr.happytravel.erp.sales.model.sales.packages.PackageListDTO"
            parameterType="hashmap">
        SELECT
        package_code,
        package_name,
        start_date,
        end_date,
        sale_start_date,
        sale_end_date,
        assign_code,
        c.KOREAN_NAME as country
        FROM
        TB_PACKAGE_INFO p
        LEFT JOIN TB_COUNTRY_INFO c ON c.COUNTRY_CODE = p.COUNTRY_CODE
        WHERE
        <include refid="readCondition"/>
        AND IS_USED != 'N'
        AND ASSIGN_CODE = #{assignCode}
        ORDER BY
        package_code
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 전체 목록 카운트 -->
    <select id="getPackageCnt" resultType="int" parameterType="hashmap">
        SELECT COUNT(package_code)
        FROM TB_PACKAGE_INFO
        WHERE
        <include refid="readCondition"/>
        AND IS_USED != 'N'
        AND ASSIGN_CODE = #{assignCode}
    </select>
    <!-- 단건 조회 -->
    <select id="selectPackage" resultType="kr.happytravel.erp.sales.model.sales.packages.PackageDTO"
            parameterType="hashmap">
        SELECT
        <!--기준테이블-->
        p.package_code AS packageCode,
        p.package_name AS packageName,
        p.start_date AS startDate,
        p.end_date AS endDate,
        p.total_price AS totalPrice,
        p.sale_price AS salePrice,
        p.sale_start_date AS saleStartDate,
        p.sale_end_date AS saleEndDate,
        p.sale_amount AS saleAmount,
        p.assign_code AS assignCode,
        p.country_code AS countryCode,
        c.korean_name as country,
        <!--조인된 항공사 테이블-->
        f.flight_code AS flightCode,
        f.airline AS airline,
        f.departure AS departure,
        f.destination AS destination,
        f.price AS flightPrice,

        <!--조인된 호텔 테이블-->
        h.hotel_code AS hotelCode,
        h.hotel_name AS hotelName,
        h.region AS hotelRegion,
        h.price AS hotelPrice,

        <!--조인된 여행사 테이블-->
        a.agency_code AS agencyCode,
        a.agency_name AS agencyName,
        a.region AS agencyRegion,
        a.price AS agencyPrice

        FROM
        TB_PACKAGE_INFO p
        LEFT JOIN TB_COUNTRY_INFO c ON p.country_code = c.country_code
        LEFT JOIN TB_FLIGHT_INFO f ON p.flight_code = f.flight_code
        LEFT JOIN TB_HOTEL_INFO h ON p.hotel_code = h.hotel_code
        LEFT JOIN TB_AGENCY_INFO a ON p.agency_code = a.agency_code
        WHERE
        <include refid="readCondition"/>
        AND package_code = #{packageCode}
    </select>

    <!-- INSERT 쿼리 -->
    <insert id="insertPackage" parameterType="hashmap">
        INSERT INTO TB_PACKAGE_INFO (
        PACKAGE_CODE,
        PACKAGE_NAME,
        START_DATE,
        END_DATE,
        HOTEL_CODE,
        FLIGHT_CODE,
        AGENCY_CODE,
        TOTAL_PRICE,
        SALE_PRICE,
        SALE_START_DATE,
        SALE_END_DATE,
        SALE_AMOUNT,
        ASSIGN_CODE,
        COUNTRY_CODE,
        IS_USED
        )
        SELECT
        CONCAT('PKG', LPAD(IFNULL(MAX_PACKAGE_NUM + 1, 1), 6, '0')),
        #{packageName},
        #{startDate},
        #{endDate},
        #{hotelCode},
        #{flightCode},
        #{agencyCode},
        <include refid="calculateTotalPrice"/>,
        <include refid="calculateTotalPrice"/>
        * 1.2,
        #{saleStartDate},
        #{saleEndDate},
        0,
        1000,
        #{countryCode},
        'Y'
        FROM (
        SELECT
        MAX(CAST(SUBSTRING(PACKAGE_CODE, 4) AS UNSIGNED)) AS MAX_PACKAGE_NUM
        FROM TB_PACKAGE_INFO
        WHERE PACKAGE_CODE LIKE 'PKG%'
        ) AS subquery
        WHERE
        <include refid="CRUDCondition"/>
        AND
        ( <include refid="checkCountryCodes"/> ) = 3
    </insert>

    <!-- UPDATE 쿼리 -->
    <update id="updatePackage" parameterType="hashmap">
        UPDATE TB_PACKAGE_INFO
        SET
        PACKAGE_NAME = #{packageName},
        START_DATE = #{startDate},
        END_DATE = #{endDate},
        HOTEL_CODE = #{hotelCode},
        FLIGHT_CODE = #{flightCode},
        AGENCY_CODE = #{agencyCode},
        TOTAL_PRICE =<include refid="calculateTotalPrice"/>,
        SALE_PRICE =
        <include refid="calculateTotalPrice"/>
        * 1.2,
        SALE_START_DATE = #{saleStartDate},
        SALE_END_DATE = #{saleEndDate},
        COUNTRY_CODE = #{countryCode}
        WHERE
        PACKAGE_CODE = #{packageCode}
        AND
        ( <include refid="checkCountryCodes"/> ) = 3
        AND
        <include refid="CRUDCondition"/>
    </update>

    <!-- 단건 IS_USED 비활성화  -->
    <update id="updatePackageYN" parameterType="hashmap">
        UPDATE TB_PACKAGE_INFO
        SET IS_USED = 'N'
        WHERE
        PACKAGE_CODE = #{packageCode}
        AND
        <include refid="CRUDCondition"/>
    </update>

    <!--생성된후 진행중인 패키지 승인여부(1000= 진행중, 2000=승인, 3000=반려)-->
    <update id="assignPackage" parameterType="hashmap">
        UPDATE TB_PACKAGE_INFO
        SET ASSIGN_CODE = #{assignCode}
        WHERE
        PACKAGE_CODE = #{packageCode}
        AND
        <include refid="managerCondition"/>
    </update>

    <select id="getCountries" resultType="kr.happytravel.erp.sales.model.sales.packages.CountryDTO" parameterType="hashmap">
        SELECT *
        FROM TB_COUNTRY_INFO
        ORDER BY KOREAN_NAME
    </select>

    <!-- 선택한 국가 항공권 목록 조회 -->
    <select id="getFlightList" resultType="kr.happytravel.erp.sales.model.sales.packages.PartnerListDTO"
            parameterType="hashmap">
        SELECT
        flight_code as code,
        airline as name,
        destination as region,
        f.country_code,
        price,
        c.KOREAN_NAME as country
        FROM
        TB_FLIGHT_INFO f
        LEFT JOIN TB_COUNTRY_INFO c ON c.COUNTRY_CODE = f.COUNTRY_CODE
        WHERE
        <include refid="readCondition"/>
        AND IS_USED != 'N'
        AND f.COUNTRY_CODE = #{countryCode}
        ORDER BY
        flight_code
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 선택한 국가 항공권 목록 카운트 -->
    <select id="getFlightCnt" resultType="int" parameterType="hashmap">
        SELECT COUNT(flight_code)
        FROM TB_FLIGHT_INFO
        WHERE
        <include refid="readCondition"/>
        AND IS_USED != 'N'
        AND COUNTRY_CODE = #{countryCode}
    </select>

    <!-- 선택한 국가 호텔 목록 조회 -->
    <select id="getHotelList" resultType="kr.happytravel.erp.sales.model.sales.packages.PartnerListDTO"
            parameterType="hashmap">
        SELECT
        hotel_code as code,
        hotel_name as name,
        h.country_code,
        region,
        price,
        c.KOREAN_NAME as country
        FROM
        TB_HOTEL_INFO h
        LEFT JOIN TB_COUNTRY_INFO c ON c.COUNTRY_CODE = h.COUNTRY_CODE
        WHERE
        <include refid="readCondition"/>
        AND IS_USED != 'N'
        AND h.COUNTRY_CODE = #{countryCode}
        ORDER BY
        hotel_code
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 선택한 국가 호텔 목록 카운트 -->
    <select id="getHotelCnt" resultType="int" parameterType="hashmap">
        SELECT COUNT(hotel_code)
        FROM TB_HOTEL_INFO
        WHERE
        <include refid="readCondition"/>
        AND IS_USED != 'N'
        AND COUNTRY_CODE = #{countryCode}
    </select>

    <!-- 선택한 국가 호텔 목록 조회 -->
    <select id="getAgencyList" resultType="kr.happytravel.erp.sales.model.sales.packages.PartnerListDTO"
            parameterType="hashmap">
        SELECT
        agency_code as code,
        agency_name as name,
        a.country_code,
        region,
        price,
        c.KOREAN_NAME as country
        FROM
        TB_AGENCY_INFO a
        LEFT JOIN TB_COUNTRY_INFO c ON c.COUNTRY_CODE = a.COUNTRY_CODE
        WHERE
        <include refid="readCondition"/>
        AND IS_USED != 'N'
        AND a.COUNTRY_CODE = #{countryCode}
        ORDER BY
        agency_code
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 선택한 국가 호텔 목록 카운트 -->
    <select id="getAgencyCnt" resultType="int" parameterType="hashmap">
        SELECT COUNT(agency_code)
        FROM TB_AGENCY_INFO
        WHERE
        <include refid="readCondition"/>
        AND IS_USED != 'N'
        AND COUNTRY_CODE = #{countryCode}
    </select>

    <!-- 판매량을 조작하기위한 조회쿼리 -->
    <select id="getPackageCodeList" parameterType="hashmap" resultType="kr.happytravel.erp.sales.model.sales.packages.InitPackageModel">
        SELECT PACKAGE_CODE, SALE_AMOUNT, SALE_END_DATE, IS_USED
        FROM TB_PACKAGE_INFO
        WHERE IS_USED != 'N' AND
        ASSIGN_CODE = '2000'
    </select>

    <!-- 판매량을 조작하기 위한 업데이트 -->
    <update id="updatePackageSaleAmount" parameterType="hashmap">
        <foreach collection="list" item="item" separator=";">
            UPDATE TB_PACKAGE_INFO
            SET SALE_AMOUNT = #{item.saleAmount},
            IS_USED = #{item.isUsed}
            WHERE PACKAGE_CODE = #{item.packageCode}
        </foreach>
    </update>



</mapper>